<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.mapper.PostMapper">

<!--    게시글 등록-->
    <insert id="insertPost" parameterType="com.study.model.PostVo" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO post(category_id, name, password, title, content)
        VALUES (#{categoryId}, #{name}, #{password}, #{title}, #{content})
    </insert>

<!--    전체 카테고리 리스트 가져오기-->
    <select id="selectCategoryList" resultType="com.study.model.CategoryVo">
        SELECT category_id AS categoryId, category_name AS categoryName
        FROM category
    </select>

<!--    게시글 리스트 가져오기-->
    <select id="selectPostList" parameterType="com.study.model.SearchVo" resultType="com.study.model.PostVo">
        SELECT
            post.post_id AS postId,
            category.category_name AS categoryName,
            post.name,
            post.title,
            post.view_count AS viewCount,
            DATE_FORMAT(post.create_date, '%Y%.%m%.%d% %h%:%i') AS createDate,
            DATE_FORMAT(post.update_date, '%Y%.%m%.%d% %h%:%i') AS updateDate,
            post.state
        FROM post post
                 JOIN category category
                      ON post.category_id = category.category_id
        <where>
        <if test="startDate != null and startDate != ''">
            AND post.create_date >= #{startDate}
        </if>

        <if test="endDate != null and endDate != ''">
            AND #{endDate} >= post.create_date
        </if>

        <if test="categoryId != null and categoryId != ''">
            AND post.category_id = #{categoryId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND CONCAT(post.title, post.name, post.content) LIKE CONCAT('%', #{keyword}, '%')
        </if>
        AND post.state = 1
        </where>
        ORDER BY post.post_id DESC
    </select>

<!--    선택 게시글 가져오기  -->
    <select id="selectPostById" parameterType="int" resultType="com.study.model.PostVo">
        SELECT
            post.post_id AS postId,
            category.category_name AS category,
            post.name,
            post.password,
            post.title,
            post.content,
            post.view_count AS viewCount,
            DATE_FORMAT(post.create_date, '%Y%.%m%.%d% %h%:%i') AS createDate,
            DATE_FORMAT(post.update_date, '%Y%.%m%.%d% %h%:%i') AS updateDate,
            post.state
        FROM post post
                 JOIN category category
                      ON post.category_id = category.category_id
        WHERE
            post.post_id = #{postId}
    </select>

<!--    선택 게시글 조회수 증가  -->
    <update id="updatePostViewCount" parameterType="int">
        UPDATE post
        SET view_count = view_count + 1
        WHERE post_id = #{postId}
    </update>

<!--    댓글 추가  -->
    <insert id="insertComment" parameterType="com.study.model.CommentVo" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO comment(post_id, content)
        VALUES (#{postId}, #{content})
    </insert>

<!--    postId에 해당하는 댓글 리스트로 불러오기  -->
    <select id="selectCommentList" parameterType="int" resultType="com.study.model.CommentVo">
        SELECT
            comment.content,
            DATE_FORMAT(comment.create_date, '%Y%.%m%.%d% %h%:%i') AS createDate
        FROM comment comment
        WHERE comment.post_id = #{postId}
    </select>

<!--    게시글 삭제 구현 ( state를 0으로 만든다 )   -->
    <update id="deletePost" parameterType="int">
        UPDATE post
        SET state = 0
        WHERE post_id = #{postId}
    </update>
</mapper>